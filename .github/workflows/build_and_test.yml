name: Build and Test

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  BUILD_DIR: build
  BIN_NAME: a.out
  UNIT_TEST_NAME: unit_tests

jobs:
  build:
    name: Build project
    defaults:
      run:
        shell: bash
    env:
      BUILD_LOG_FILE: build_log.txt
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - docker-image: ["", "epitechcontent/epitest-docker:latest"]
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    container:
        image: ${{ matrix.docker-image }}
    steps:
      - uses: actions/checkout@v3
      - name: Build project
        run: |
          cmake -S . -B $BUILD_DIR >> $BUILD_LOG_FILE
          cmake --build $BUILD_DIR --target $BIN_NAME >> $BUILD_LOG_FILE
      - name: Upload Build log
        uses: actions/upload-artifact@v3
        with:
          name: Build_log
          path: |
            ${{ env.BUILD_LOG_FILE }}
          retention-days: 7
  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
      env:
        CRITERION_JOBS: "N"
        CRITERION_VERBOSITY_LEVEL: 1
        CRITERION_OUTPUTS: xml:tests_results.xml,tap:tests_results.tap
        CRITERION_ALWAYS_SUCCEED: 1
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: |
          cmake -S . -B $BUILD_DIR
          cmake --build $BUILD_DIR --target $UNIT_TEST_NAME
          ./$BUILD_DIR/$UNIT_TEST_NAME
      - name: Get Coverage
        run: |
          mkdir -p CODE_COVERAGE
          gcovr -e Tests -x -o coverage.xml --html-details $COVERAGE_RESULT_DIR/index.html
          cat coverage.xml
      - name: Upload tests coverage
        uses: actions/upload-artifact@v3
        with:
          name: tests_coverage
          path: |
            CODE_COVERAGE/*
            coverage.xml
          retention-days: 7
      - name: Upload tests results
        uses: actions/upload-artifact@v3
        with:
          name: tests_results
          path: |
            tests_results.xml
            tests_results.tap
          retention-days: 7
  tests_report:
    needs: unit_tests
    name: Unit tests report
    runs-on: ubuntu-latest
    steps:
      - name: Download Test Report
        uses: actions/download-artifact@master
        with:
          name: tests_results
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: tests_results.xml
          commit: ${{ github.event.workflow_run.head_sha }}
          require_tests: false
          require_passed_tests: false
          include_passed: true
          detailed_summary: true
          job_name: Unit tests report
  
  coverage_report:
    needs: [unit_tests, tests_report]
    name: Coverage report
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage Report
        uses: actions/download-artifact@master
        with:
          name: tests_coverage
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '60 80'
      - name: Coverage summary
        run: cat code-coverage-results.md >> ${{ needs.tests_report.outputs }}